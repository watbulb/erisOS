diff --git a/Makefile b/Makefile
index e8cc4436..0c8e9a3c 100644
--- a/Makefile
+++ b/Makefile
@@ -26,11 +26,11 @@ ARCH_SRCS = $(sort $(wildcard $(ARCH_GLOBS)))
 BASE_OBJS = $(patsubst $(srcdir)/%,%.o,$(basename $(BASE_SRCS)))
 ARCH_OBJS = $(patsubst $(srcdir)/%,%.o,$(basename $(ARCH_SRCS)))
 REPLACED_OBJS = $(sort $(subst /$(ARCH)/,/,$(ARCH_OBJS)))
-ALL_OBJS = $(addprefix obj/, $(filter-out $(REPLACED_OBJS), $(sort $(BASE_OBJS) $(ARCH_OBJS))))
+ALL_OBJS = $(addprefix obj/, $(patsubst %/signal/aarch64/%.o,%,$(filter-out $(REPLACED_OBJS), $(sort $(BASE_OBJS) $(ARCH_OBJS)))))
 
 LIBC_OBJS = $(filter obj/src/%,$(ALL_OBJS)) $(filter obj/compat/%,$(ALL_OBJS))
 LDSO_OBJS = $(filter obj/ldso/%,$(ALL_OBJS:%.o=%.lo))
-CRT_OBJS = $(filter obj/crt/%,$(ALL_OBJS))
+CRT_OBJS  =  #$(filter obj/crt/%,$(ALL_OBJS))
 
 AOBJS = $(LIBC_OBJS)
 LOBJS = $(LIBC_OBJS:.o=.lo)
@@ -135,25 +135,38 @@ CC_CMD = $(CC) $(CFLAGS_ALL) -c -o $@ $<
 
 # Choose invocation of assembler to be used
 ifeq ($(ADD_CFI),yes)
-	AS_CMD = LC_ALL=C awk -f $(srcdir)/tools/add-cfi.common.awk -f $(srcdir)/tools/add-cfi.$(ARCH).awk $< | $(CC) $(CFLAGS_ALL) -x assembler -c -o $@ -
+AS_CMD = LC_ALL=C awk -f $(srcdir)/tools/add-cfi.common.awk -f $(srcdir)/tools/add-cfi.$(ARCH).awk $< | $(CC) $(CFLAGS_ALL) -x assembler -c -o $@ -
+else
+ifneq ($(findstring darwin,$(CROSS_COMPILE)),)
+	ALTERNATIVE_AS = 1
+	SED_AS_CMD = LC_ALL=C sed -f $(srcdir)/tools/remove-gnu-directives.sed
+	AS_CMD   = $(SED_AS_CMD) $<   | $(CC) $(CFLAGS_ALL) -x assembler -c -o $@ -
+	ASP_CMD  = $(SED_AS_CMD) $<   | $(CC) $(CFLAGS_ALL) -S -E -o $@.s -
+	ASP_CMD2 = $(SED_AS_CMD) $@.s | $(CC) $(CFLAGS_ALL) -x assembler -c -o $@ -
 else
 	AS_CMD = $(CC_CMD)
 endif
+endif
 
 obj/%.o: $(srcdir)/%.s
-	$(AS_CMD)
+	$(error $< $@)
 
 obj/%.o: $(srcdir)/%.S
-	$(CC_CMD)
+	$(error $< $@)
 
 obj/%.o: $(srcdir)/%.c $(GENH) $(IMPH)
 	$(CC_CMD)
 
+ifeq ($(ALTERNATIVE_AS),1)
 obj/%.lo: $(srcdir)/%.s
 	$(AS_CMD)
-
 obj/%.lo: $(srcdir)/%.S
-	$(CC_CMD)
+	$(ASP_CMD)
+	$(ASP_CMD2)
+else
+obj/%.lo: $(srcdir)/%.S
+	$(AS_CMD)
+endif
 
 obj/%.lo: $(srcdir)/%.c $(GENH) $(IMPH)
 	$(CC_CMD)
diff --git a/arch/aarch64/bits/float.h b/arch/aarch64/bits/float.h
index 719c7908..c030803c 100644
--- a/arch/aarch64/bits/float.h
+++ b/arch/aarch64/bits/float.h
@@ -1,6 +1,26 @@
 #define FLT_EVAL_METHOD 0
 
+#ifdef __APPLE__
+
+#define LDBL_TRUE_MIN 4.94065645841246544177e-324
+#define LDBL_MIN 2.2250738585072014e-308L
+#define LDBL_MAX 1.7976931348623157e+308L
+#define LDBL_EPSILON 2.2204460492503131e-16L
+
+#define LDBL_MANT_DIG 53
+#define LDBL_MIN_EXP (-1021)
+#define LDBL_MAX_EXP 1024
+
+#define LDBL_DIG 15
+#define LDBL_MIN_10_EXP (-307)
+#define LDBL_MAX_10_EXP 308
+
+#define DECIMAL_DIG 17
+
+#else
+
 #define LDBL_TRUE_MIN 6.47517511943802511092443895822764655e-4966L
+
 #define LDBL_MIN 3.36210314311209350626267781732175260e-4932L
 #define LDBL_MAX 1.18973149535723176508575932662800702e+4932L
 #define LDBL_EPSILON 1.92592994438723585305597794258492732e-34L
@@ -14,3 +34,5 @@
 #define LDBL_MAX_10_EXP 4932
 
 #define DECIMAL_DIG 36
+
+#endif
diff --git a/src/include/features.h b/src/include/features.h
index f17bd151..beba0875 100644
--- a/src/include/features.h
+++ b/src/include/features.h
@@ -3,9 +3,25 @@
 
 #include "../../include/features.h"
 
-#define weak __attribute__((__weak__))
+#define weak   __attribute__((__weak__))
 #define hidden __attribute__((__visibility__("hidden")))
+
+#ifdef __APPLE__
+
+#ifdef __ASSEMBLER__
+// Override directives here to other type names
+#endif
+#undef weak_alias
+#define weak_alias(old, new)  \
+    __asm__(".globl _" #new); \
+    __asm__("_" #new " = _" #old);\
+    extern __typeof(old) new __attribute__((weak_import))
+
+#else
+
 #define weak_alias(old, new) \
 	extern __typeof(old) new __attribute__((__weak__, __alias__(#old)))
 
 #endif
+
+#endif
diff --git a/tools/remove-gnu-directives.sed b/tools/remove-gnu-directives.sed
new file mode 100644
index 00000000..e18e2482
--- /dev/null
+++ b/tools/remove-gnu-directives.sed
@@ -0,0 +1,3 @@
+/^\.hidden .*/d
+/^\.size .*/d
+/^\.type .*,.function/d
diff --git a/src/signal/aarch64/restore.s b/unused-src/signal/aarch64/restore.s
similarity index 100%
rename from src/signal/aarch64/restore.s
rename to unused-src/signal/aarch64/restore.s
diff --git a/src/signal/aarch64/sigsetjmp.s b/unused-src/signal/aarch64/sigsetjmp.s
similarity index 92%
rename from src/signal/aarch64/sigsetjmp.s
rename to unused-src/signal/aarch64/sigsetjmp.s
index 75910c43..4860145e 100644
--- a/src/signal/aarch64/sigsetjmp.s
+++ b/unused-src/signal/aarch64/sigsetjmp.s
@@ -1,3 +1,4 @@
+#ifdef __APPLE__
 .global sigsetjmp
 .global __sigsetjmp
 .type sigsetjmp,%function
@@ -19,3 +20,4 @@ __sigsetjmp:
 
 .hidden __sigsetjmp_tail
 	b __sigsetjmp_tail
+#endif
